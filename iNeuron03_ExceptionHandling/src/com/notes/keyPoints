 # Key points about exceptional handling 
 
The Exception Handling in Java is one of the powerful mechanism to handle
the runtime errors so that the normal flow of the application can be maintained.
Exception Handling is a mechanism to handle runtime errors such as ClassNotFoundException,
IOException, SQLException, RemoteException, etc.
The core advantage of exception handling is to maintain the normal flow of the application.
An exception normally disrupts the normal flow of the application; that is why we need to handle exceptions.

There are mainly two types of exceptions: checked and unchecked.
An error is considered as the unchecked exception. 
However, according to Oracle, there are three types of exceptions namely:

 1) Checked Exception
 2) Unchecked Exception
 3) Error
 
 try	
 The "try" keyword is used to specify a block where we should place an exception code.
 It means we can't use try block alone. The try block must be followed by either catch or finally.
 
catch	
The "catch" block is used to handle the exception. 
It must be preceded by try block which means we can't use catch block alone. It can be followed by finally block later.

finally	
The "finally" block is used to execute the necessary code of the program. 
It is executed whether an exception is handled or not.

throw	
The "throw" keyword is used to throw an exception.

throws	
The "throws" keyword is used to declare exceptions. 
It specifies that there may occur an exception in the method. 
It doesn't throw an exception. It is always used with method signature.